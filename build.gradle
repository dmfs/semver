plugins {
    id 'java-library'
    id "org.dmfs.gitversion" version "0.3.0"
}

sourceCompatibility = 1.8

gitVersion {
    githubRepo "dmfs/semver"
    changes {
        are major when {
            commitMessage contains("(?i)#major\\b")
        }
        are major when {
            commitMessage contains("(?i)#break\\b")
        }
        are minor when {
            commitMessage referencesGithubIssue { issue -> issue.labels?.every { it.name != "bug" } }
        }
        are patch when {
            commitMessage referencesGithubIssue { issue -> issue.labels?.any { it.name == "bug" } }
        }
        are minor when {
            commitMessage contains("#feature\\b")
        }
        are minor when {
            commitMessage contains("(?i)\\b(implement(s|ed)?|close[sd]?) #\\d+\\b")
        }
        are patch when {
            commitMessage contains("(?i)\\b(fix(e[sd])?|resolve[sd]?) #\\d+\\b")
        }
        otherwise preRelease
    }
    releaseBranchPattern ~/main$/
}

apply from: 'publish.gradle'
apply from: 'jacoco.gradle'

allprojects {
    group 'org.dmfs'
    repositories {
        mavenCentral()
    }
}

dependencies {
    implementation 'org.dmfs:srcless-annotations:0.0.5'
    annotationProcessor 'org.dmfs:srcless-processors:0.0.5'
    implementation "org.dmfs:jems2:2.8.0"
    testImplementation "org.dmfs:jems2-testing:2.8.0"
    testImplementation "org.hamcrest:hamcrest:2.2"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

test {
    useJUnitPlatform()
}